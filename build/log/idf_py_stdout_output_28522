[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/deedee/lcd/build/bootloader/esp-idf/esptool_py && /Users/deedee/.espressif/python_env/idf5.3_py3.11_env/bin/python /Users/deedee/esp/esp-idf_5_3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/deedee/lcd/build/bootloader/bootloader.bin
Bootloader binary size 0x5230 bytes. 0x2dd0 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lcd_driver.c.obj
/Users/deedee/lcd/main/lcd_driver.c: In function 'lcd_write_command':
/Users/deedee/lcd/main/lcd_driver.c:192:42: warning: unused variable 'rtrans' [-Wunused-variable]
  192 |         static spi_transaction_t        *rtrans;
      |                                          ^~~~~~
/Users/deedee/lcd/main/lcd_driver.c: In function 'lcd_write_data_byte':
/Users/deedee/lcd/main/lcd_driver.c:211:24: warning: passing argument 2 of 'lcd_data' makes pointer from integer without a cast [-Wint-conversion]
  211 |         lcd_data( spi, data, 1 );
      |                        ^~~~
      |                        |
      |                        uint8_t {aka unsigned char}
/Users/deedee/lcd/main/lcd_driver.c:77:56: note: expected 'const uint8_t *' {aka 'const unsigned char *'} but argument is of type 'uint8_t' {aka 'unsigned char'}
   77 | void lcd_data( spi_device_handle_t spi, const uint8_t *data, int len )
      |                                         ~~~~~~~~~~~~~~~^~~~
/Users/deedee/lcd/main/lcd_driver.c: In function 'lcd_write_data_word':
/Users/deedee/lcd/main/lcd_driver.c:231:24: warning: passing argument 2 of 'lcd_data' makes pointer from integer without a cast [-Wint-conversion]
  231 |         lcd_data( spi, data, 2 );
      |                        ^~~~
      |                        |
      |                        uint16_t {aka short unsigned int}
/Users/deedee/lcd/main/lcd_driver.c:77:56: note: expected 'const uint8_t *' {aka 'const unsigned char *'} but argument is of type 'uint16_t' {aka 'short unsigned int'}
   77 | void lcd_data( spi_device_handle_t spi, const uint8_t *data, int len )
      |                                         ~~~~~~~~~~~~~~~^~~~
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable spi_master.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/deedee/lcd/build/spi_master.bin
[7/8] cd /Users/deedee/lcd/build/esp-idf/esptool_py && /Users/deedee/.espressif/python_env/idf5.3_py3.11_env/bin/python /Users/deedee/esp/esp-idf_5_3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/deedee/lcd/build/partition_table/partition-table.bin /Users/deedee/lcd/build/spi_master.bin
spi_master.bin binary size 0x3eab0 bytes. Smallest app partition is 0x100000 bytes. 0xc1550 bytes (76%) free.
[7/8] cd /Users/deedee/esp/esp-idf_5_3/components/esptool_py && /Users/deedee/.espressif/tools/cmake/3.24.0/CMake.app/Contents/bin/cmake -D IDF_PATH=/Users/deedee/esp/esp-idf_5_3 -D "SERIAL_TOOL=/Users/deedee/.espressif/python_env/idf5.3_py3.11_env/bin/python;;/Users/deedee/esp/esp-idf_5_3/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/deedee/lcd/build -P /Users/deedee/esp/esp-idf_5_3/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbserial-1130 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 spi_master.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev3
Serial port /dev/cu.usbserial-1130
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.1)
Features: WiFi, BLE
Crystal is 40MHz
MAC: f4:12:fa:41:a6:04
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0004efff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21040 bytes to 13060...
Writing at 0x00000000... (100 %)
Wrote 21040 bytes (13060 compressed) at 0x00000000 in 0.7 seconds (effective 254.3 kbit/s)...
Hash of data verified.
Compressed 256688 bytes to 132164...
Writing at 0x00010000... (11 %)
Writing at 0x0001c555... (22 %)
Writing at 0x00025621... (33 %)
Writing at 0x0002beab... (44 %)
Writing at 0x00031e0b... (55 %)
Writing at 0x0003aed2... (66 %)
Writing at 0x00041b1f... (77 %)
Writing at 0x000478c9... (88 %)
Writing at 0x0004e539... (100 %)
Wrote 256688 bytes (132164 compressed) at 0x00010000 in 4.1 seconds (effective 499.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 311.1 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
